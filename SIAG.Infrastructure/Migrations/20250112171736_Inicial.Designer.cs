// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SIAG.Infrastructure.Configuracao;

#nullable disable

namespace SIAG.Infrastructure.Migrations
{
    [DbContext(typeof(SiagDbContext))]
    [Migration("20250112171736_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SIAG.Domain.Armazenagem.Cadastro.Models.AgrupadorAtivo", b =>
                {
                    b.Property<Guid>("IdAgrupador")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_agrupador");

                    b.Property<int?>("CdSequencia")
                        .HasColumnType("int")
                        .HasColumnName("cd_sequencia");

                    b.Property<string>("Codigo1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("codigo1");

                    b.Property<string>("Codigo2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("codigo2");

                    b.Property<string>("Codigo3")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("codigo3");

                    b.Property<DateTime?>("DtAgrupador")
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_agrupador");

                    b.Property<int?>("FgStatus")
                        .HasColumnType("int")
                        .HasColumnName("fg_status");

                    b.Property<int?>("IdAreaArmazenagem")
                        .HasColumnType("int")
                        .HasColumnName("id_areaarmazenagem");

                    b.Property<int?>("TpAgrupamento")
                        .HasColumnType("int")
                        .HasColumnName("tp_agrupamento");

                    b.HasKey("IdAgrupador");

                    b.ToTable("agrupadorativo");
                });

            modelBuilder.Entity("SIAG.Domain.Armazenagem.Cadastro.Models.AreaArmazenagem", b =>
                {
                    b.Property<long>("IdAreaArmazenagem")
                        .HasColumnType("bigint")
                        .HasColumnName("id_areaarmazenagem");

                    b.Property<string>("CdIdentificacao")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cd_identificacao");

                    b.Property<int>("FgStatus")
                        .HasColumnType("int")
                        .HasColumnName("fg_status");

                    b.Property<Guid?>("IdAgrupador")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_agrupador");

                    b.Property<Guid?>("IdAgrupadorReservado")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_agrupador_reservado");

                    b.Property<int>("IdEndereco")
                        .HasColumnType("int")
                        .HasColumnName("id_endereco");

                    b.Property<int>("IdTipoArea")
                        .HasColumnType("int")
                        .HasColumnName("id_tipoarea");

                    b.Property<int?>("NrLado")
                        .HasColumnType("int")
                        .HasColumnName("nr_lado");

                    b.Property<int>("NrPosicaoX")
                        .HasColumnType("int")
                        .HasColumnName("nr_posicaox");

                    b.Property<int>("NrPosicaoY")
                        .HasColumnType("int")
                        .HasColumnName("nr_posicaoy");

                    b.HasKey("IdAreaArmazenagem");

                    b.HasIndex("IdAgrupador");

                    b.HasIndex("IdAgrupadorReservado");

                    b.HasIndex("IdEndereco");

                    b.HasIndex("IdTipoArea");

                    b.ToTable("areaarmazenagem");
                });

            modelBuilder.Entity("SIAG.Domain.Armazenagem.Cadastro.Models.Atividade", b =>
                {
                    b.Property<int>("IdAtividade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_atividade");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAtividade"));

                    b.Property<TimeSpan?>("Duracao")
                        .HasColumnType("time")
                        .HasColumnName("duracao");

                    b.Property<int?>("FgEvitaconflitoendereco")
                        .HasColumnType("int")
                        .HasColumnName("fg_evitaconflitoendereco");

                    b.Property<int?>("FgPermiteRejeitar")
                        .HasColumnType("int")
                        .HasColumnName("fg_permite_rejeitar");

                    b.Property<int?>("FgTipoatribuicaoautomatica")
                        .HasColumnType("int")
                        .HasColumnName("fg_tipoatribuicaoautomatica");

                    b.Property<int?>("IdAtividadeanterior")
                        .HasColumnType("int")
                        .HasColumnName("id_atividadeanterior");

                    b.Property<int?>("IdAtividaderotinavalidacao")
                        .HasColumnType("int")
                        .HasColumnName("id_atividaderotinavalidacao");

                    b.Property<int>("IdEquipamentomodelo")
                        .HasColumnType("int")
                        .HasColumnName("id_equipamentomodelo");

                    b.Property<int?>("IdSetortrabalho")
                        .HasColumnType("int")
                        .HasColumnName("id_setortrabalho");

                    b.Property<string>("NmAtividade")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nm_atividade");

                    b.HasKey("IdAtividade");

                    b.ToTable("atividade");
                });

            modelBuilder.Entity("SIAG.Domain.Armazenagem.Cadastro.Models.Caixa", b =>
                {
                    b.Property<string>("IdCaixa")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("id_caixa");

                    b.Property<string>("CdCor")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cd_cor");

                    b.Property<string>("CdGradeTamanho")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cd_gradetamanho");

                    b.Property<string>("CdProduto")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cd_produto");

                    b.Property<DateTime?>("DtEmbalagem")
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_embalagem");

                    b.Property<DateTime?>("DtEstufamento")
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_estufamento");

                    b.Property<DateTime?>("DtExpedicao")
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_expedicao");

                    b.Property<DateTime?>("DtSorter")
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_sorter");

                    b.Property<int?>("FgStatus")
                        .HasColumnType("int")
                        .HasColumnName("fg_status");

                    b.Property<Guid?>("IdAgrupador")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_agrupador");

                    b.Property<bool?>("IdFgRf")
                        .HasColumnType("bit")
                        .HasColumnName("fg_rfid");

                    b.Property<int?>("IdPallet")
                        .HasColumnType("int")
                        .HasColumnName("id_pallet");

                    b.Property<int?>("IdPedido")
                        .HasColumnType("int")
                        .HasColumnName("id_pedido");

                    b.Property<int?>("IdPrograma")
                        .HasColumnType("int")
                        .HasColumnName("id_programa");

                    b.Property<int?>("NrCaixa")
                        .HasColumnType("int")
                        .HasColumnName("nr_caixa");

                    b.Property<int?>("NrPares")
                        .HasColumnType("int")
                        .HasColumnName("nr_pares");

                    b.Property<decimal?>("QtPeso")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("qt_peso");

                    b.HasKey("IdCaixa");

                    b.HasIndex("IdAgrupador");

                    b.HasIndex("IdPallet");

                    b.HasIndex("IdPedido");

                    b.HasIndex("IdPrograma");

                    b.ToTable("caixa");
                });

            modelBuilder.Entity("SIAG.Domain.Armazenagem.Cadastro.Models.CaixaLeitura", b =>
                {
                    b.Property<long>("IdCaixaleitura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id_caixaleitura");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdCaixaleitura"));

                    b.Property<DateTime?>("DtLeitura")
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_leitura");

                    b.Property<bool?>("FgCancelado")
                        .HasColumnType("bit")
                        .HasColumnName("fg_cancelado");

                    b.Property<int?>("FgStatus")
                        .HasColumnType("int")
                        .HasColumnName("fg_status");

                    b.Property<int?>("FgTipo")
                        .HasColumnType("int")
                        .HasColumnName("fg_tipo");

                    b.Property<long?>("IdAreaarmazenagem")
                        .HasColumnType("bigint")
                        .HasColumnName("id_areaarmazenagem");

                    b.Property<string>("IdCaixa")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("id_caixa");

                    b.Property<int?>("IdEndereco")
                        .HasColumnType("int")
                        .HasColumnName("id_endereco");

                    b.Property<int?>("IdEquipamento")
                        .HasColumnType("int")
                        .HasColumnName("id_equipamento");

                    b.Property<long?>("IdOperador")
                        .HasColumnType("bigint")
                        .HasColumnName("id_operador");

                    b.Property<long?>("IdOrdem")
                        .HasColumnType("bigint")
                        .HasColumnName("id_ordem");

                    b.Property<int?>("IdPallet")
                        .HasColumnType("int")
                        .HasColumnName("id_pallet");

                    b.HasKey("IdCaixaleitura");

                    b.HasIndex("IdAreaarmazenagem");

                    b.HasIndex("IdCaixa");

                    b.HasIndex("IdEndereco");

                    b.HasIndex("IdEquipamento");

                    b.HasIndex("IdOperador");

                    b.HasIndex("IdPallet");

                    b.ToTable("caixaleitura");
                });

            modelBuilder.Entity("SIAG.Domain.Armazenagem.Cadastro.Models.Chamada", b =>
                {
                    b.Property<Guid>("IdChamada")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_chamada");

                    b.Property<DateTime>("DtAtendida")
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_atendida");

                    b.Property<DateTime>("DtChamada")
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_chamada");

                    b.Property<DateTime>("DtFinalizada")
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_finalizada");

                    b.Property<DateTime>("DtRecebida")
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_recebida");

                    b.Property<DateTime>("DtRejeitada")
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_rejeitada");

                    b.Property<int>("FgStatus")
                        .HasColumnType("int")
                        .HasColumnName("fg_status");

                    b.Property<long>("IdAreaarmazenagemdestino")
                        .HasColumnType("bigint")
                        .HasColumnName("id_areaarmazenagemdestino");

                    b.Property<long>("IdAreaarmazenagemleitura")
                        .HasColumnType("bigint")
                        .HasColumnName("id_areaarmazenagemleitura");

                    b.Property<long>("IdAreaarmazenagemorigem")
                        .HasColumnType("bigint")
                        .HasColumnName("id_areaarmazenagemorigem");

                    b.Property<int>("IdAtividade")
                        .HasColumnType("int")
                        .HasColumnName("id_atividade");

                    b.Property<int>("IdAtividaderejeicao")
                        .HasColumnType("int")
                        .HasColumnName("id_atividaderejeicao");

                    b.Property<Guid>("IdChamadaorigem")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_chamadaorigem");

                    b.Property<Guid>("IdChamadasuspensa")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_chamadasuspensa");

                    b.Property<int>("IdEquipamento")
                        .HasColumnType("int")
                        .HasColumnName("id_equipamento");

                    b.Property<long>("IdOperador")
                        .HasColumnType("bigint")
                        .HasColumnName("id_operador");

                    b.Property<int>("IdPalletDestino")
                        .HasColumnType("int")
                        .HasColumnName("id_palletdestino");

                    b.Property<int>("IdPalletleitura")
                        .HasColumnType("int")
                        .HasColumnName("id_palletleitura");

                    b.Property<int>("IdPalletorigem")
                        .HasColumnType("int")
                        .HasColumnName("id_palletorigem");

                    b.Property<bool>("Priorizar")
                        .HasColumnType("bit")
                        .HasColumnName("priorizar");

                    b.HasKey("IdChamada");

                    b.HasIndex("IdAreaarmazenagemdestino");

                    b.HasIndex("IdAreaarmazenagemleitura");

                    b.HasIndex("IdAreaarmazenagemorigem");

                    b.HasIndex("IdAtividade");

                    b.HasIndex("IdAtividaderejeicao");

                    b.HasIndex("IdChamadaorigem");

                    b.HasIndex("IdChamadasuspensa");

                    b.HasIndex("IdEquipamento");

                    b.HasIndex("IdOperador");

                    b.HasIndex("IdPalletDestino");

                    b.HasIndex("IdPalletleitura");

                    b.HasIndex("IdPalletorigem");

                    b.ToTable("chamada");
                });

            modelBuilder.Entity("SIAG.Domain.Armazenagem.Cadastro.Models.Deposito", b =>
                {
                    b.Property<int>("IdDeposito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_deposito");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDeposito"));

                    b.Property<string>("NmDeposito")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nm_deposito");

                    b.HasKey("IdDeposito");

                    b.ToTable("deposito");
                });

            modelBuilder.Entity("SIAG.Domain.Armazenagem.Cadastro.Models.Desempenho", b =>
                {
                    b.Property<long>("IdDesempenho")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id_desempenho");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdDesempenho"));

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_cadastro");

                    b.Property<int?>("FgErroclassificacao")
                        .HasColumnType("int")
                        .HasColumnName("fg_erroclassificacao");

                    b.Property<int?>("FgHumoreficiencia")
                        .HasColumnType("int")
                        .HasColumnName("fg_humoreficiencia");

                    b.Property<long?>("IdAreaArmazenagem")
                        .HasColumnType("bigint")
                        .HasColumnName("id_areaarmazenagem");

                    b.Property<int?>("IdEquipamento")
                        .HasColumnType("int")
                        .HasColumnName("id_equipamento");

                    b.Property<int?>("IdEquipamentoModelo")
                        .HasColumnType("int")
                        .HasColumnName("id_equipamentomodelo");

                    b.Property<long?>("IdOperador")
                        .HasColumnType("bigint")
                        .HasColumnName("id_operador");

                    b.Property<string>("IdReferencia")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("id_referencia");

                    b.Property<int?>("IdSetorTrabalho")
                        .HasColumnType("int")
                        .HasColumnName("id_setortrabalho");

                    b.Property<int?>("NrTempoestimado")
                        .HasColumnType("int")
                        .HasColumnName("nr_tempoestimado");

                    b.Property<int?>("NrTemporealizado")
                        .HasColumnType("int")
                        .HasColumnName("nr_temporealizado");

                    b.HasKey("IdDesempenho");

                    b.HasIndex("IdAreaArmazenagem");

                    b.HasIndex("IdEquipamento");

                    b.HasIndex("IdEquipamentoModelo");

                    b.HasIndex("IdOperador");

                    b.HasIndex("IdSetorTrabalho");

                    b.ToTable("desempenho");
                });

            modelBuilder.Entity("SIAG.Domain.Armazenagem.Cadastro.Models.DesempenhoCaixa", b =>
                {
                    b.Property<DateTime?>("DtLeituracaixa")
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_leituracaixa");

                    b.Property<int?>("FgErroclassificacao")
                        .HasColumnType("int")
                        .HasColumnName("fg_erroclassificacao");

                    b.Property<long?>("IdAreaArmazenagem")
                        .HasColumnType("bigint")
                        .HasColumnName("id_areaarmazenagem");

                    b.Property<string>("IdCaixa")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("id_caixa");

                    b.Property<int?>("IdEquipamento")
                        .HasColumnType("int")
                        .HasColumnName("id_equipamento");

                    b.Property<long?>("IdOperador")
                        .HasColumnType("bigint")
                        .HasColumnName("id_operador");

                    b.Property<int?>("NrTempoestimado")
                        .HasColumnType("int")
                        .HasColumnName("nr_tempoestimado");

                    b.HasIndex("IdAreaArmazenagem");

                    b.HasIndex("IdEquipamento");

                    b.HasIndex("IdOperador");

                    b.ToTable("desempenhocaixa");
                });

            modelBuilder.Entity("SIAG.Domain.Armazenagem.Cadastro.Models.Endereco", b =>
                {
                    b.Property<int>("IdEndereco")
                        .HasColumnType("int")
                        .HasColumnName("id_endereco");

                    b.Property<int>("FgStatus")
                        .HasColumnType("int")
                        .HasColumnName("fg_status");

                    b.Property<int>("IdRegiaoTrabalho")
                        .HasColumnType("int")
                        .HasColumnName("id_regiaotrabalho");

                    b.Property<int>("IdSetorTrabalho")
                        .HasColumnType("int")
                        .HasColumnName("id_setortrabalho");

                    b.Property<int>("IdTipoEndereco")
                        .HasColumnType("int")
                        .HasColumnName("id_tipoendereco");

                    b.Property<string>("NmEndereco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nm_endereco");

                    b.Property<int>("QtEstoqueMaximo")
                        .HasColumnType("int")
                        .HasColumnName("qt_estoquemaximo");

                    b.Property<int>("QtEstoqueMinimo")
                        .HasColumnType("int")
                        .HasColumnName("qt_estoqueminimo");

                    b.Property<int>("TpPreenchimento")
                        .HasColumnType("int")
                        .HasColumnName("tp_preenchimento");

                    b.HasKey("IdEndereco");

                    b.HasIndex("IdRegiaoTrabalho");

                    b.HasIndex("IdSetorTrabalho");

                    b.HasIndex("IdTipoEndereco");

                    b.ToTable("endereco");
                });

            modelBuilder.Entity("SIAG.Domain.Armazenagem.Cadastro.Models.Equipamento", b =>
                {
                    b.Property<int>("IdEquipamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_equipamento");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEquipamento"));

                    b.Property<string>("CdLeituraPendente")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cd_leitura_pendente");

                    b.Property<string>("CdUltimaLeitura")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cd_ultimaleitura");

                    b.Property<DateTime?>("DtInclusao")
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_inclusao");

                    b.Property<DateTime?>("DtManutencao")
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_manutencao");

                    b.Property<DateTime?>("DtUltimaLeitura")
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_ultimaleitura");

                    b.Property<int?>("FgStatus")
                        .HasColumnType("int")
                        .HasColumnName("fg_status");

                    b.Property<int?>("FgStatusTrocaCaracol")
                        .HasColumnType("int")
                        .HasColumnName("fg_statustrocacaracol");

                    b.Property<int?>("IdEndereco")
                        .HasColumnType("int")
                        .HasColumnName("id_endereco");

                    b.Property<int?>("IdEquipamentoModelo")
                        .HasColumnType("int")
                        .HasColumnName("id_equipamentomodelo");

                    b.Property<long?>("IdOperador")
                        .HasColumnType("bigint")
                        .HasColumnName("id_operador");

                    b.Property<long?>("IdOperador2")
                        .HasColumnType("bigint")
                        .HasColumnName("id_operador2");

                    b.Property<int?>("IdSetorTrabalho")
                        .HasColumnType("int")
                        .HasColumnName("id_setortrabalho");

                    b.Property<string>("NmAbreviadoEquipamento")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nm_abreviado_equipamento");

                    b.Property<string>("NmEquipamento")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nm_equipamento");

                    b.Property<string>("NmIdentificador")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nm_identificador");

                    b.Property<string>("NmIp")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nm_ip");

                    b.Property<string>("NmObservacao")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nm_observacao");

                    b.Property<string>("NmUsuarioLiberacao")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nm_usuario_liberacao");

                    b.HasKey("IdEquipamento");

                    b.HasIndex("IdEndereco");

                    b.HasIndex("IdEquipamentoModelo");

                    b.HasIndex("IdOperador");

                    b.HasIndex("IdOperador2");

                    b.HasIndex("IdSetorTrabalho");

                    b.ToTable("equipamento");
                });

            modelBuilder.Entity("SIAG.Domain.Armazenagem.Cadastro.Models.EquipamentoModelo", b =>
                {
                    b.Property<int>("IdEquipamentoModelo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_equipamentomodelo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEquipamentoModelo"));

                    b.Property<int?>("FgStatus")
                        .HasColumnType("int")
                        .HasColumnName("fg_status");

                    b.Property<string>("NmDescricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nm_descricao");

                    b.HasKey("IdEquipamentoModelo");

                    b.ToTable("equipamentomodelo");
                });

            modelBuilder.Entity("SIAG.Domain.Armazenagem.Cadastro.Models.LiderVirtual", b =>
                {
                    b.Property<long>("IdLidervirtual")
                        .HasColumnType("bigint")
                        .HasColumnName("id_lidervirtual");

                    b.Property<DateTime?>("DtLogin")
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_login");

                    b.Property<DateTime?>("DtLoginlimite")
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_loginlimite");

                    b.Property<DateTime?>("DtLogoff")
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_logoff");

                    b.Property<int?>("IdEquipamentoDestino")
                        .HasColumnType("int")
                        .HasColumnName("id_equipamentodestino");

                    b.Property<int?>("IdEquipamentoOrigem")
                        .HasColumnType("int")
                        .HasColumnName("id_equipamentoorigem");

                    b.Property<long?>("IdOperador")
                        .HasColumnType("bigint")
                        .HasColumnName("id_operador");

                    b.Property<long?>("IdOperadorlogin")
                        .HasColumnType("bigint")
                        .HasColumnName("id_operadorlogin");

                    b.HasKey("IdLidervirtual");

                    b.HasIndex("IdEquipamentoDestino");

                    b.HasIndex("IdEquipamentoOrigem");

                    b.HasIndex("IdOperador");

                    b.HasIndex("IdOperadorlogin");

                    b.ToTable("lidervirtual");
                });

            modelBuilder.Entity("SIAG.Domain.Armazenagem.Cadastro.Models.NiveisAgrupadores", b =>
                {
                    b.Property<long>("IdNiveisagrupadores")
                        .HasColumnType("bigint")
                        .HasColumnName("id_niveisagrupadores");

                    b.Property<long>("Inicio")
                        .HasColumnType("bigint")
                        .HasColumnName("inicio");

                    b.Property<int>("Nivel")
                        .HasColumnType("int")
                        .HasColumnName("nivel");

                    b.Property<long?>("Termino")
                        .HasColumnType("bigint")
                        .HasColumnName("termino");

                    b.HasKey("IdNiveisagrupadores");

                    b.ToTable("niveisagrupadores");
                });

            modelBuilder.Entity("SIAG.Domain.Armazenagem.Cadastro.Models.Operador", b =>
                {
                    b.Property<long>("IdOperador")
                        .HasColumnType("bigint")
                        .HasColumnName("id_operador");

                    b.Property<DateTime?>("DtLogin")
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_login");

                    b.Property<int?>("FgFuncao")
                        .HasColumnType("int")
                        .HasColumnName("fg_funcao");

                    b.Property<long?>("IdResponsavel")
                        .HasColumnType("bigint")
                        .HasColumnName("id_responsavel");

                    b.Property<string>("NmCpf")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nm_cpf");

                    b.Property<string>("NmLogin")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nm_login");

                    b.Property<string>("NmNfcoperaddor")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nm_nfcoperador");

                    b.Property<string>("NmOperador")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nm_operador");

                    b.Property<int?>("NrLocalidade")
                        .HasColumnType("int")
                        .HasColumnName("nr_localidade");

                    b.HasKey("IdOperador");

                    b.ToTable("operador");
                });

            modelBuilder.Entity("SIAG.Domain.Armazenagem.Cadastro.Models.OperadorHistorico", b =>
                {
                    b.Property<int?>("CdEvento")
                        .HasColumnType("int")
                        .HasColumnName("cd_evento");

                    b.Property<DateTime?>("DtEvento")
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_evento");

                    b.Property<int?>("IdEndereco")
                        .HasColumnType("int")
                        .HasColumnName("id_endereco");

                    b.Property<int?>("IdEquipamento")
                        .HasColumnType("int")
                        .HasColumnName("id_equipamento");

                    b.Property<long?>("IdOperador")
                        .HasColumnType("bigint")
                        .HasColumnName("id_operador");

                    b.HasIndex("IdEndereco");

                    b.HasIndex("IdEquipamento");

                    b.ToTable("operadorhistorico");
                });

            modelBuilder.Entity("SIAG.Domain.Armazenagem.Cadastro.Models.Pallet", b =>
                {
                    b.Property<int>("IdPallet")
                        .HasColumnType("int")
                        .HasColumnName("id_pallet");

                    b.Property<string>("CdIdentificacao")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cd_identificacao");

                    b.Property<DateTime?>("DtUltimaMovimentacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_ultimamovimentacao");

                    b.Property<int?>("FgStatus")
                        .HasColumnType("int")
                        .HasColumnName("fg_status");

                    b.Property<Guid?>("IdAgrupadorAtivo")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_agrupador");

                    b.Property<long?>("IdAreaArmazenagem")
                        .HasColumnType("bigint")
                        .HasColumnName("id_areaarmazenagem");

                    b.Property<int?>("QtUtilizacao")
                        .HasColumnType("int")
                        .HasColumnName("qt_utilizacao");

                    b.HasKey("IdPallet");

                    b.HasIndex("IdAgrupadorAtivo");

                    b.HasIndex("IdAreaArmazenagem");

                    b.ToTable("pallet");
                });

            modelBuilder.Entity("SIAG.Domain.Armazenagem.Cadastro.Models.Parametro", b =>
                {
                    b.Property<int>("IdParametro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_parametro");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdParametro"));

                    b.Property<int?>("FgAtivo")
                        .HasColumnType("int")
                        .HasColumnName("fg_ativo");

                    b.Property<int?>("FgTipoparametro")
                        .HasColumnType("int")
                        .HasColumnName("fg_tipoparametro");

                    b.Property<bool?>("FgVisivel")
                        .HasColumnType("bit")
                        .HasColumnName("fg_visivel");

                    b.Property<string>("NmParametro")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nm_parametro");

                    b.Property<string>("NmTipo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nm_tipo");

                    b.Property<string>("NmUnidademedida")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nm_unidademedida");

                    b.Property<string>("NmValor")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nm_valor");

                    b.HasKey("IdParametro");

                    b.ToTable("parametro");
                });

            modelBuilder.Entity("SIAG.Domain.Armazenagem.Cadastro.Models.ParametroMensagemCaracol", b =>
                {
                    b.Property<int>("IdParametromensagemcaracol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_parametromensagemcaracol");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdParametromensagemcaracol"));

                    b.Property<string>("Cor")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cor");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("descricao");

                    b.Property<string>("Mensagem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("mensagem");

                    b.HasKey("IdParametromensagemcaracol");

                    b.ToTable("parametromensagemcaracol");
                });

            modelBuilder.Entity("SIAG.Domain.Armazenagem.Cadastro.Models.Pedido", b =>
                {
                    b.Property<int>("IdPedido")
                        .HasColumnType("int")
                        .HasColumnName("id_pedido");

                    b.Property<int?>("CdBox")
                        .HasColumnType("int")
                        .HasColumnName("cd_box");

                    b.Property<int?>("CdCanal")
                        .HasColumnType("int")
                        .HasColumnName("cd_canal");

                    b.Property<int?>("CdCliente")
                        .HasColumnType("int")
                        .HasColumnName("cd_cliente");

                    b.Property<string>("CdEstabelecimento")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cd_estabelecimento");

                    b.Property<int?>("CdLote")
                        .HasColumnType("int")
                        .HasColumnName("cd_lote");

                    b.Property<int?>("CdOrdemExportacao")
                        .HasColumnType("int")
                        .HasColumnName("cd_ordemexportacao");

                    b.Property<long?>("CdOrdemExportacaoDefinitiva")
                        .HasColumnType("bigint")
                        .HasColumnName("cd_ordemexportacaodefinitiva");

                    b.Property<int?>("CdPedido")
                        .HasColumnType("int")
                        .HasColumnName("cd_pedido");

                    b.Property<string>("CdRota")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cd_rota");

                    b.Property<int?>("CdSequenciaExpedicao")
                        .HasColumnType("int")
                        .HasColumnName("cd_sequenciaexpedicao");

                    b.Property<int?>("CdVeiculoExportacao")
                        .HasColumnType("int")
                        .HasColumnName("cd_veiculoexportacao");

                    b.Property<int?>("CdVeiculoExportacaoDefinitiva")
                        .HasColumnType("int")
                        .HasColumnName("cd_veiculoexportacaodefinitiva");

                    b.Property<DateTime?>("DtAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_atualizacao");

                    b.Property<DateTime?>("DtImplantacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_implantacao");

                    b.Property<DateTime?>("DtImportacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_importacao");

                    b.Property<DateTime?>("DtPredata")
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_predata");

                    b.Property<DateTime?>("DtPrevisaoExportacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_previsaoexportacao");

                    b.Property<int?>("FgSku")
                        .HasColumnType("int")
                        .HasColumnName("fg_sku");

                    b.Property<int?>("FgStatus")
                        .HasColumnType("int")
                        .HasColumnName("fg_status");

                    b.Property<int?>("IdNotaFiscal")
                        .HasColumnType("int")
                        .HasColumnName("id_notafiscal");

                    b.Property<int?>("IdTransportadora")
                        .HasColumnType("int")
                        .HasColumnName("id_transportadora");

                    b.Property<int?>("QtAcessorio")
                        .HasColumnType("int")
                        .HasColumnName("qt_acessorio");

                    b.Property<int?>("QtCaixa")
                        .HasColumnType("int")
                        .HasColumnName("qt_caixa");

                    b.Property<decimal?>("QtCubagemAcessorio")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("qt_cubagemacessorio");

                    b.Property<decimal?>("QtCubagemCaixa")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("qt_cubagemcaixa");

                    b.Property<decimal?>("QtCubagemDisplay")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("qt_cubagemdisplay");

                    b.Property<decimal?>("QtCubagemExpositores")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("qt_cubagemexpositores");

                    b.Property<int?>("QtDisplay")
                        .HasColumnType("int")
                        .HasColumnName("qt_display");

                    b.Property<int?>("QtExpositores")
                        .HasColumnType("int")
                        .HasColumnName("qt_expositores");

                    b.Property<string>("TpCarga")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("tp_carga");

                    b.Property<string>("TpCargaAglutinado")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("tp_cargaaglutinado");

                    b.HasKey("IdPedido");

                    b.ToTable("pedido");
                });

            modelBuilder.Entity("SIAG.Domain.Armazenagem.Cadastro.Models.PosicaoCaracolRefugo", b =>
                {
                    b.Property<int>("IdPosicaocaracolrefugo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_posicaocaracolrefugo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPosicaocaracolrefugo"));

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("descricao");

                    b.Property<string>("Fabrica")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("fabrica");

                    b.Property<int?>("Posicao")
                        .HasColumnType("int")
                        .HasColumnName("posicao");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("tipo");

                    b.HasKey("IdPosicaocaracolrefugo");

                    b.ToTable("posicaocaracolrefugo");
                });

            modelBuilder.Entity("SIAG.Domain.Armazenagem.Cadastro.Models.Programa", b =>
                {
                    b.Property<int>("IdPrograma")
                        .HasColumnType("int")
                        .HasColumnName("id_programa");

                    b.Property<string>("CdDeposito")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cd_deposito");

                    b.Property<int?>("CdDocumento")
                        .HasColumnType("int")
                        .HasColumnName("cd_documento");

                    b.Property<string>("CdEquipamento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cd_equipamento");

                    b.Property<int>("CdEstabelecimento")
                        .HasColumnType("int")
                        .HasColumnName("cd_estabelecimento");

                    b.Property<int>("CdFabrica")
                        .HasColumnType("int")
                        .HasColumnName("cd_fabrica");

                    b.Property<int?>("CdPrograma")
                        .HasColumnType("int")
                        .HasColumnName("cd_programa");

                    b.Property<DateTime>("DtLiberacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_liberacao");

                    b.Property<int>("FgTipo")
                        .HasColumnType("int")
                        .HasColumnName("fg_tipo");

                    b.Property<decimal?>("QtAlturaCaixa")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("qt_alturacaixa");

                    b.Property<decimal?>("QtComprimentoCaixa")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("qt_comprimentocaixa");

                    b.Property<decimal?>("QtLarguraCaixa")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("qt_larguracaixa");

                    b.HasKey("IdPrograma");

                    b.ToTable("programa");
                });

            modelBuilder.Entity("SIAG.Domain.Armazenagem.Cadastro.Models.RegiaoTrabalho", b =>
                {
                    b.Property<int>("IdRegiaoTrabalho")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_regiaotrabalho");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRegiaoTrabalho"));

                    b.Property<int>("IdDeposito")
                        .HasColumnType("int")
                        .HasColumnName("id_deposito");

                    b.Property<string>("NmRegiaoTrabalho")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nm_regiaotrabalho");

                    b.HasKey("IdRegiaoTrabalho");

                    b.HasIndex("IdDeposito");

                    b.ToTable("regiaotrabalho");
                });

            modelBuilder.Entity("SIAG.Domain.Armazenagem.Cadastro.Models.SetorTrabalho", b =>
                {
                    b.Property<int>("IdSetorTrabalho")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_setortrabalho");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSetorTrabalho"));

                    b.Property<int>("IdDeposito")
                        .HasColumnType("int")
                        .HasColumnName("id_deposito");

                    b.Property<string>("NmSetorTrabalho")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nm_setortrabalho");

                    b.HasKey("IdSetorTrabalho");

                    b.HasIndex("IdDeposito");

                    b.ToTable("setortrabalho");
                });

            modelBuilder.Entity("SIAG.Domain.Armazenagem.Cadastro.Models.StatusLeitor", b =>
                {
                    b.Property<int>("IdStatusLeitor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_status_leitor");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdStatusLeitor"));

                    b.Property<int?>("Conectado")
                        .HasColumnType("int")
                        .HasColumnName("conectado");

                    b.Property<int?>("Configurado")
                        .HasColumnType("int")
                        .HasColumnName("configurado");

                    b.Property<DateTime?>("DtStatus")
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_status");

                    b.Property<string>("Equipamento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("equipamento");

                    b.Property<int?>("Executando")
                        .HasColumnType("int")
                        .HasColumnName("executando");

                    b.Property<string>("Leitor")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("leitor");

                    b.HasKey("IdStatusLeitor");

                    b.ToTable("status_leitor");
                });

            modelBuilder.Entity("SIAG.Domain.Armazenagem.Cadastro.Models.TipoArea", b =>
                {
                    b.Property<int>("IdTipoArea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_tipoarea");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoArea"));

                    b.Property<string>("NmTipoArea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nm_tipoarea");

                    b.HasKey("IdTipoArea");

                    b.ToTable("tipoarea");
                });

            modelBuilder.Entity("SIAG.Domain.Armazenagem.Cadastro.Models.TipoEndereco", b =>
                {
                    b.Property<int>("IdTipoEndereco")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_tipoendereco");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoEndereco"));

                    b.Property<string>("NmTipoEndereco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nm_tipoendereco");

                    b.HasKey("IdTipoEndereco");

                    b.ToTable("tipoendereco");
                });

            modelBuilder.Entity("SIAG.Domain.Armazenagem.Cadastro.Models.Turno", b =>
                {
                    b.Property<int>("IdTurno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_turno");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTurno"));

                    b.Property<int>("CdTurno")
                        .HasColumnType("int")
                        .HasColumnName("cd_turno");

                    b.Property<bool?>("DiaAnterior")
                        .HasColumnType("bit")
                        .HasColumnName("diaanterior");

                    b.Property<bool?>("DiaSucessor")
                        .HasColumnType("bit")
                        .HasColumnName("diasucessor");

                    b.Property<DateTime?>("DtFim")
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_fim");

                    b.Property<DateTime?>("DtInicio")
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_inicio");

                    b.HasKey("IdTurno");

                    b.ToTable("turno");
                });

            modelBuilder.Entity("SIAG.Domain.Armazenagem.Cadastro.Models.AreaArmazenagem", b =>
                {
                    b.HasOne("SIAG.Domain.Armazenagem.Cadastro.Models.AgrupadorAtivo", "Agrupador")
                        .WithMany()
                        .HasForeignKey("IdAgrupador");

                    b.HasOne("SIAG.Domain.Armazenagem.Cadastro.Models.AgrupadorAtivo", "AgrupadorReservado")
                        .WithMany()
                        .HasForeignKey("IdAgrupadorReservado");

                    b.HasOne("SIAG.Domain.Armazenagem.Cadastro.Models.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("IdEndereco")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SIAG.Domain.Armazenagem.Cadastro.Models.TipoArea", "TipoArea")
                        .WithMany()
                        .HasForeignKey("IdTipoArea")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Agrupador");

                    b.Navigation("AgrupadorReservado");

                    b.Navigation("Endereco");

                    b.Navigation("TipoArea");
                });

            modelBuilder.Entity("SIAG.Domain.Armazenagem.Cadastro.Models.Caixa", b =>
                {
                    b.HasOne("SIAG.Domain.Armazenagem.Cadastro.Models.AgrupadorAtivo", "Agrupador")
                        .WithMany()
                        .HasForeignKey("IdAgrupador");

                    b.HasOne("SIAG.Domain.Armazenagem.Cadastro.Models.Pallet", "Pallet")
                        .WithMany()
                        .HasForeignKey("IdPallet");

                    b.HasOne("SIAG.Domain.Armazenagem.Cadastro.Models.Pedido", "Pedido")
                        .WithMany()
                        .HasForeignKey("IdPedido");

                    b.HasOne("SIAG.Domain.Armazenagem.Cadastro.Models.Programa", "Programa")
                        .WithMany()
                        .HasForeignKey("IdPrograma");

                    b.Navigation("Agrupador");

                    b.Navigation("Pallet");

                    b.Navigation("Pedido");

                    b.Navigation("Programa");
                });

            modelBuilder.Entity("SIAG.Domain.Armazenagem.Cadastro.Models.CaixaLeitura", b =>
                {
                    b.HasOne("SIAG.Domain.Armazenagem.Cadastro.Models.AreaArmazenagem", "Areaarmazenagem")
                        .WithMany()
                        .HasForeignKey("IdAreaarmazenagem");

                    b.HasOne("SIAG.Domain.Armazenagem.Cadastro.Models.Caixa", "Caixa")
                        .WithMany()
                        .HasForeignKey("IdCaixa");

                    b.HasOne("SIAG.Domain.Armazenagem.Cadastro.Models.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("IdEndereco");

                    b.HasOne("SIAG.Domain.Armazenagem.Cadastro.Models.Equipamento", "Equipamento")
                        .WithMany()
                        .HasForeignKey("IdEquipamento");

                    b.HasOne("SIAG.Domain.Armazenagem.Cadastro.Models.Operador", "Operador")
                        .WithMany()
                        .HasForeignKey("IdOperador");

                    b.HasOne("SIAG.Domain.Armazenagem.Cadastro.Models.Pallet", "Pallet")
                        .WithMany()
                        .HasForeignKey("IdPallet");

                    b.Navigation("Areaarmazenagem");

                    b.Navigation("Caixa");

                    b.Navigation("Endereco");

                    b.Navigation("Equipamento");

                    b.Navigation("Operador");

                    b.Navigation("Pallet");
                });

            modelBuilder.Entity("SIAG.Domain.Armazenagem.Cadastro.Models.Chamada", b =>
                {
                    b.HasOne("SIAG.Domain.Armazenagem.Cadastro.Models.AreaArmazenagem", "Areaarmazenagemdestino")
                        .WithMany()
                        .HasForeignKey("IdAreaarmazenagemdestino")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SIAG.Domain.Armazenagem.Cadastro.Models.AreaArmazenagem", "Areaarmazenagemleitura")
                        .WithMany()
                        .HasForeignKey("IdAreaarmazenagemleitura")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SIAG.Domain.Armazenagem.Cadastro.Models.AreaArmazenagem", "Areaarmazenagemorigem")
                        .WithMany()
                        .HasForeignKey("IdAreaarmazenagemorigem")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SIAG.Domain.Armazenagem.Cadastro.Models.Atividade", "Atividade")
                        .WithMany()
                        .HasForeignKey("IdAtividade")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SIAG.Domain.Armazenagem.Cadastro.Models.Atividade", "Atividaderejeicao")
                        .WithMany()
                        .HasForeignKey("IdAtividaderejeicao")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SIAG.Domain.Armazenagem.Cadastro.Models.Chamada", "Chamadaorigem")
                        .WithMany()
                        .HasForeignKey("IdChamadaorigem")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SIAG.Domain.Armazenagem.Cadastro.Models.Chamada", "Chamadasuspensa")
                        .WithMany()
                        .HasForeignKey("IdChamadasuspensa")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SIAG.Domain.Armazenagem.Cadastro.Models.Equipamento", "Equipamento")
                        .WithMany()
                        .HasForeignKey("IdEquipamento")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SIAG.Domain.Armazenagem.Cadastro.Models.Operador", "Operador")
                        .WithMany()
                        .HasForeignKey("IdOperador")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SIAG.Domain.Armazenagem.Cadastro.Models.Pallet", "PalletDestino")
                        .WithMany()
                        .HasForeignKey("IdPalletDestino")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SIAG.Domain.Armazenagem.Cadastro.Models.Pallet", "Palletleitura")
                        .WithMany()
                        .HasForeignKey("IdPalletleitura")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SIAG.Domain.Armazenagem.Cadastro.Models.Pallet", "Palletorigem")
                        .WithMany()
                        .HasForeignKey("IdPalletorigem")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Areaarmazenagemdestino");

                    b.Navigation("Areaarmazenagemleitura");

                    b.Navigation("Areaarmazenagemorigem");

                    b.Navigation("Atividade");

                    b.Navigation("Atividaderejeicao");

                    b.Navigation("Chamadaorigem");

                    b.Navigation("Chamadasuspensa");

                    b.Navigation("Equipamento");

                    b.Navigation("Operador");

                    b.Navigation("PalletDestino");

                    b.Navigation("Palletleitura");

                    b.Navigation("Palletorigem");
                });

            modelBuilder.Entity("SIAG.Domain.Armazenagem.Cadastro.Models.Desempenho", b =>
                {
                    b.HasOne("SIAG.Domain.Armazenagem.Cadastro.Models.AreaArmazenagem", "AreaArmazenagem")
                        .WithMany()
                        .HasForeignKey("IdAreaArmazenagem");

                    b.HasOne("SIAG.Domain.Armazenagem.Cadastro.Models.Equipamento", "Equipamento")
                        .WithMany()
                        .HasForeignKey("IdEquipamento");

                    b.HasOne("SIAG.Domain.Armazenagem.Cadastro.Models.EquipamentoModelo", "EquipamentoModelo")
                        .WithMany()
                        .HasForeignKey("IdEquipamentoModelo");

                    b.HasOne("SIAG.Domain.Armazenagem.Cadastro.Models.Operador", "Operador")
                        .WithMany()
                        .HasForeignKey("IdOperador");

                    b.HasOne("SIAG.Domain.Armazenagem.Cadastro.Models.SetorTrabalho", "SetorTrabalho")
                        .WithMany()
                        .HasForeignKey("IdSetorTrabalho");

                    b.Navigation("AreaArmazenagem");

                    b.Navigation("Equipamento");

                    b.Navigation("EquipamentoModelo");

                    b.Navigation("Operador");

                    b.Navigation("SetorTrabalho");
                });

            modelBuilder.Entity("SIAG.Domain.Armazenagem.Cadastro.Models.DesempenhoCaixa", b =>
                {
                    b.HasOne("SIAG.Domain.Armazenagem.Cadastro.Models.AreaArmazenagem", "AreaArmazenagem")
                        .WithMany()
                        .HasForeignKey("IdAreaArmazenagem");

                    b.HasOne("SIAG.Domain.Armazenagem.Cadastro.Models.Equipamento", "Equipamento")
                        .WithMany()
                        .HasForeignKey("IdEquipamento");

                    b.HasOne("SIAG.Domain.Armazenagem.Cadastro.Models.Operador", "Operador")
                        .WithMany()
                        .HasForeignKey("IdOperador");

                    b.Navigation("AreaArmazenagem");

                    b.Navigation("Equipamento");

                    b.Navigation("Operador");
                });

            modelBuilder.Entity("SIAG.Domain.Armazenagem.Cadastro.Models.Endereco", b =>
                {
                    b.HasOne("SIAG.Domain.Armazenagem.Cadastro.Models.RegiaoTrabalho", "RegiaoTrabalho")
                        .WithMany()
                        .HasForeignKey("IdRegiaoTrabalho")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SIAG.Domain.Armazenagem.Cadastro.Models.SetorTrabalho", "SetorTrabalho")
                        .WithMany()
                        .HasForeignKey("IdSetorTrabalho")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SIAG.Domain.Armazenagem.Cadastro.Models.TipoEndereco", "TipoEndereco")
                        .WithMany()
                        .HasForeignKey("IdTipoEndereco")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("RegiaoTrabalho");

                    b.Navigation("SetorTrabalho");

                    b.Navigation("TipoEndereco");
                });

            modelBuilder.Entity("SIAG.Domain.Armazenagem.Cadastro.Models.Equipamento", b =>
                {
                    b.HasOne("SIAG.Domain.Armazenagem.Cadastro.Models.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("IdEndereco");

                    b.HasOne("SIAG.Domain.Armazenagem.Cadastro.Models.EquipamentoModelo", "EquipamentoModelo")
                        .WithMany()
                        .HasForeignKey("IdEquipamentoModelo");

                    b.HasOne("SIAG.Domain.Armazenagem.Cadastro.Models.Operador", "Operador")
                        .WithMany()
                        .HasForeignKey("IdOperador");

                    b.HasOne("SIAG.Domain.Armazenagem.Cadastro.Models.Operador", "Operador2")
                        .WithMany()
                        .HasForeignKey("IdOperador2");

                    b.HasOne("SIAG.Domain.Armazenagem.Cadastro.Models.SetorTrabalho", "SetorTrabalho")
                        .WithMany()
                        .HasForeignKey("IdSetorTrabalho");

                    b.Navigation("Endereco");

                    b.Navigation("EquipamentoModelo");

                    b.Navigation("Operador");

                    b.Navigation("Operador2");

                    b.Navigation("SetorTrabalho");
                });

            modelBuilder.Entity("SIAG.Domain.Armazenagem.Cadastro.Models.LiderVirtual", b =>
                {
                    b.HasOne("SIAG.Domain.Armazenagem.Cadastro.Models.Equipamento", "EquipamentoDestino")
                        .WithMany()
                        .HasForeignKey("IdEquipamentoDestino");

                    b.HasOne("SIAG.Domain.Armazenagem.Cadastro.Models.Equipamento", "EquipamentoOrigem")
                        .WithMany()
                        .HasForeignKey("IdEquipamentoOrigem");

                    b.HasOne("SIAG.Domain.Armazenagem.Cadastro.Models.Operador", "Operador")
                        .WithMany()
                        .HasForeignKey("IdOperador");

                    b.HasOne("SIAG.Domain.Armazenagem.Cadastro.Models.Operador", "OperadorLogin")
                        .WithMany()
                        .HasForeignKey("IdOperadorlogin");

                    b.Navigation("EquipamentoDestino");

                    b.Navigation("EquipamentoOrigem");

                    b.Navigation("Operador");

                    b.Navigation("OperadorLogin");
                });

            modelBuilder.Entity("SIAG.Domain.Armazenagem.Cadastro.Models.OperadorHistorico", b =>
                {
                    b.HasOne("SIAG.Domain.Armazenagem.Cadastro.Models.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("IdEndereco");

                    b.HasOne("SIAG.Domain.Armazenagem.Cadastro.Models.Equipamento", "Equipamento")
                        .WithMany()
                        .HasForeignKey("IdEquipamento");

                    b.Navigation("Endereco");

                    b.Navigation("Equipamento");
                });

            modelBuilder.Entity("SIAG.Domain.Armazenagem.Cadastro.Models.Pallet", b =>
                {
                    b.HasOne("SIAG.Domain.Armazenagem.Cadastro.Models.AgrupadorAtivo", "AgrupadorAtivo")
                        .WithMany()
                        .HasForeignKey("IdAgrupadorAtivo");

                    b.HasOne("SIAG.Domain.Armazenagem.Cadastro.Models.AreaArmazenagem", "AreaArmazenagem")
                        .WithMany()
                        .HasForeignKey("IdAreaArmazenagem");

                    b.Navigation("AgrupadorAtivo");

                    b.Navigation("AreaArmazenagem");
                });

            modelBuilder.Entity("SIAG.Domain.Armazenagem.Cadastro.Models.RegiaoTrabalho", b =>
                {
                    b.HasOne("SIAG.Domain.Armazenagem.Cadastro.Models.Deposito", "Deposito")
                        .WithMany()
                        .HasForeignKey("IdDeposito")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Deposito");
                });

            modelBuilder.Entity("SIAG.Domain.Armazenagem.Cadastro.Models.SetorTrabalho", b =>
                {
                    b.HasOne("SIAG.Domain.Armazenagem.Cadastro.Models.Deposito", "Deposito")
                        .WithMany()
                        .HasForeignKey("IdDeposito")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Deposito");
                });
#pragma warning restore 612, 618
        }
    }
}

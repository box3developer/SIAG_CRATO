// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SIAG.Infrastructure.Configuracao;

#nullable disable

namespace SIAG.Infrastructure.Migrations
{
    [DbContext(typeof(SiagDbContext))]
    [Migration("20250106030600_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SIAG.Domain.Armazenagem.Cadastro.Models.AgrupadorAtivo", b =>
                {
                    b.Property<Guid>("IdAgrupador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_agrupador");

                    b.Property<int>("CdSequencia")
                        .HasColumnType("int")
                        .HasColumnName("cd_sequencia");

                    b.Property<string>("Codigo1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("codigo1");

                    b.Property<string>("Codigo2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("codigo2");

                    b.Property<string>("Codigo3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("codigo3");

                    b.Property<DateTime>("DtAgrupador")
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_agrupador");

                    b.Property<int>("FgStatus")
                        .HasColumnType("int")
                        .HasColumnName("fg_status");

                    b.Property<int>("IdAreaArmazenagem")
                        .HasColumnType("int")
                        .HasColumnName("id_area_armazenagem");

                    b.Property<int>("TpAgrupamento")
                        .HasColumnType("int")
                        .HasColumnName("tp_agrupamento");

                    b.HasKey("IdAgrupador");

                    b.ToTable("agrupadorativo");
                });

            modelBuilder.Entity("SIAG.Domain.Armazenagem.Cadastro.Models.AreaArmazenagem", b =>
                {
                    b.Property<int>("IdAreaArmazenagem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idarea_armazenagem");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAreaArmazenagem"));

                    b.Property<Guid>("AgrupadorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("agrupador_id");

                    b.Property<string>("CdIdentificacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cd_identificacao");

                    b.Property<int>("FgStatus")
                        .HasColumnType("int")
                        .HasColumnName("fg_status");

                    b.Property<Guid>("IdAgrupadorReservado")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_agrupador_reservado");

                    b.Property<int>("IdEndereco")
                        .HasColumnType("int")
                        .HasColumnName("id_endereco");

                    b.Property<int>("IdTipoArea")
                        .HasColumnType("int")
                        .HasColumnName("id_tipo_area");

                    b.Property<int>("NrLado")
                        .HasColumnType("int")
                        .HasColumnName("nr_lado");

                    b.Property<int>("NrPosicaoX")
                        .HasColumnType("int")
                        .HasColumnName("nr_posicao_x");

                    b.Property<int>("NrPosicaoY")
                        .HasColumnType("int")
                        .HasColumnName("nr_posicao_y");

                    b.HasKey("IdAreaArmazenagem");

                    b.HasIndex("AgrupadorId");

                    b.HasIndex("IdAgrupadorReservado");

                    b.HasIndex("IdEndereco");

                    b.HasIndex("IdTipoArea");

                    b.ToTable("areaarmazenagem");
                });

            modelBuilder.Entity("SIAG.Domain.Armazenagem.Cadastro.Models.Caixa", b =>
                {
                    b.Property<string>("IdCaixa")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("id_caixa");

                    b.Property<Guid>("AgrupadorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("agrupador_id");

                    b.Property<string>("CdCor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cd_cor");

                    b.Property<string>("CdGrudeTamanho")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cd_grude_tamanho");

                    b.Property<string>("CdProduto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cd_produto");

                    b.Property<DateTime>("DtEmbalagem")
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_embalagem");

                    b.Property<DateTime>("DtEstufamento")
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_estufamento");

                    b.Property<DateTime>("DtExpedicao")
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_expedicao");

                    b.Property<DateTime>("DtSorter")
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_sorter");

                    b.Property<int>("FgStatus")
                        .HasColumnType("int")
                        .HasColumnName("fg_status");

                    b.Property<bool>("IdFgRf")
                        .HasColumnType("bit")
                        .HasColumnName("id_fg_rf");

                    b.Property<int>("IdPallet")
                        .HasColumnType("int")
                        .HasColumnName("id_pallet");

                    b.Property<int>("IdPedido")
                        .HasColumnType("int")
                        .HasColumnName("id_pedido");

                    b.Property<int>("IdPrograma")
                        .HasColumnType("int")
                        .HasColumnName("id_programa");

                    b.Property<int>("NrCaixa")
                        .HasColumnType("int")
                        .HasColumnName("nr_caixa");

                    b.Property<int>("NrPares")
                        .HasColumnType("int")
                        .HasColumnName("nr_pares");

                    b.Property<decimal>("QtPeso")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("qt_peso");

                    b.HasKey("IdCaixa");

                    b.HasIndex("AgrupadorId");

                    b.ToTable("caixa");
                });

            modelBuilder.Entity("SIAG.Domain.Armazenagem.Cadastro.Models.Deposito", b =>
                {
                    b.Property<int>("IdDeposito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_deposito");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDeposito"));

                    b.Property<string>("NmDeposito")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nm_deposito");

                    b.HasKey("IdDeposito");

                    b.ToTable("deposito");
                });

            modelBuilder.Entity("SIAG.Domain.Armazenagem.Cadastro.Models.Endereco", b =>
                {
                    b.Property<int>("IdEndereco")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_endereco");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEndereco"));

                    b.Property<int>("FgStatus")
                        .HasColumnType("int")
                        .HasColumnName("fg_status");

                    b.Property<int>("IdRegiaoTrabalho")
                        .HasColumnType("int")
                        .HasColumnName("id_regiao_trabalho");

                    b.Property<int>("IdSetorTrabalho")
                        .HasColumnType("int")
                        .HasColumnName("id_setor_trabalho");

                    b.Property<int>("IdTipoEndereco")
                        .HasColumnType("int")
                        .HasColumnName("id_tipo_endereco");

                    b.Property<string>("NmEndereco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nm_endereco");

                    b.Property<int>("QtEstoqueMaximo")
                        .HasColumnType("int")
                        .HasColumnName("qt_estoque_maximo");

                    b.Property<int>("QtEstoqueMinimo")
                        .HasColumnType("int")
                        .HasColumnName("qt_estoque_minimo");

                    b.Property<int>("TpPreenchimento")
                        .HasColumnType("int")
                        .HasColumnName("tp_preenchimento");

                    b.HasKey("IdEndereco");

                    b.HasIndex("IdRegiaoTrabalho");

                    b.HasIndex("IdSetorTrabalho");

                    b.HasIndex("IdTipoEndereco");

                    b.ToTable("endereco");
                });

            modelBuilder.Entity("SIAG.Domain.Armazenagem.Cadastro.Models.Equipamento", b =>
                {
                    b.Property<int>("IdEquipamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_equipamento");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEquipamento"));

                    b.Property<string>("CdLeituraPendente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cd_leitura_pendente");

                    b.Property<string>("CdUltimaLeitura")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cd_ultima_leitura");

                    b.Property<DateTime>("DtInclusao")
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_inclusao");

                    b.Property<DateTime>("DtManutencao")
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_manutencao");

                    b.Property<DateTime>("DtUltimaLeitura")
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_ultima_leitura");

                    b.Property<int>("EnderecoId")
                        .HasColumnType("int")
                        .HasColumnName("endereco_id");

                    b.Property<int>("FgStatus")
                        .HasColumnType("int")
                        .HasColumnName("fg_status");

                    b.Property<int>("FgStatusTrocaCaracol")
                        .HasColumnType("int")
                        .HasColumnName("fg_status_troca_caracol");

                    b.Property<int>("IdEquipamentoModelo")
                        .HasColumnType("int")
                        .HasColumnName("id_equipamento_modelo");

                    b.Property<int>("IdOperador")
                        .HasColumnType("int")
                        .HasColumnName("id_operador");

                    b.Property<int>("IdSetorTrabalho")
                        .HasColumnType("int")
                        .HasColumnName("id_setor_trabalho");

                    b.Property<string>("NmAbreviadoEquipamento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nm_abreviado_equipamento");

                    b.Property<string>("NmEquipamento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nm_equipamento");

                    b.Property<string>("NmIdentificador")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nm_identificador");

                    b.Property<string>("NmIp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nm_ip");

                    b.Property<string>("NmObservacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nm_observacao");

                    b.Property<string>("NmUsuarioLiberacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nm_usuario_liberacao");

                    b.HasKey("IdEquipamento");

                    b.ToTable("equipamento");
                });

            modelBuilder.Entity("SIAG.Domain.Armazenagem.Cadastro.Models.Pallet", b =>
                {
                    b.Property<int>("IdPallet")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_pallet");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPallet"));

                    b.Property<Guid>("AgrupadorAtivoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("agrupador_ativo_id");

                    b.Property<string>("CdIdentificacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cd_identificacao");

                    b.Property<DateTime>("DtUltimaMovimentacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_ultima_movimentacao");

                    b.Property<int>("FgStatus")
                        .HasColumnType("int")
                        .HasColumnName("fg_status");

                    b.Property<int>("IdAreaArmazenagem")
                        .HasColumnType("int")
                        .HasColumnName("id_area_armazenagem");

                    b.Property<int>("QtUtilizacao")
                        .HasColumnType("int")
                        .HasColumnName("qt_utilizacao");

                    b.HasKey("IdPallet");

                    b.HasIndex("AgrupadorAtivoId");

                    b.HasIndex("IdAreaArmazenagem");

                    b.ToTable("Pallet");
                });

            modelBuilder.Entity("SIAG.Domain.Armazenagem.Cadastro.Models.Pedido", b =>
                {
                    b.Property<int>("IdPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_pedido");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPedido"));

                    b.Property<int>("CdBox")
                        .HasColumnType("int")
                        .HasColumnName("cd_box");

                    b.Property<int>("CdCanal")
                        .HasColumnType("int")
                        .HasColumnName("cd_canal");

                    b.Property<int>("CdCliente")
                        .HasColumnType("int")
                        .HasColumnName("cd_cliente");

                    b.Property<string>("CdEstabelecimento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cd_estabelecimento");

                    b.Property<int>("CdLote")
                        .HasColumnType("int")
                        .HasColumnName("cd_lote");

                    b.Property<int>("CdOrdemExportacao")
                        .HasColumnType("int")
                        .HasColumnName("cd_ordem_exportacao");

                    b.Property<int>("CdOrdemExportacaoDefinitiva")
                        .HasColumnType("int")
                        .HasColumnName("cd_ordem_exportacao_definitiva");

                    b.Property<int>("CdPedido")
                        .HasColumnType("int")
                        .HasColumnName("cd_pedido");

                    b.Property<string>("CdRota")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cd_rota");

                    b.Property<int>("CdSequenciaExpedicao")
                        .HasColumnType("int")
                        .HasColumnName("cd_sequencia_expedicao");

                    b.Property<int>("CdVeiculoExportacao")
                        .HasColumnType("int")
                        .HasColumnName("cd_veiculo_exportacao");

                    b.Property<int>("CdVeiculoExportacaoDefinitiva")
                        .HasColumnType("int")
                        .HasColumnName("cd_veiculo_exportacao_definitiva");

                    b.Property<DateTime>("DtAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_atualizacao");

                    b.Property<DateTime>("DtImplantacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_implantacao");

                    b.Property<DateTime>("DtImportacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_importacao");

                    b.Property<DateTime>("DtPredata")
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_predata");

                    b.Property<DateTime>("DtPrevisaoExportacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_previsao_exportacao");

                    b.Property<int>("FgSku")
                        .HasColumnType("int")
                        .HasColumnName("fg_sku");

                    b.Property<int>("FgStatus")
                        .HasColumnType("int")
                        .HasColumnName("fg_status");

                    b.Property<int>("IdNotaFiscal")
                        .HasColumnType("int")
                        .HasColumnName("id_nota_fiscal");

                    b.Property<int>("IdTransportadora")
                        .HasColumnType("int")
                        .HasColumnName("id_transportadora");

                    b.Property<int>("QtAcessorio")
                        .HasColumnType("int")
                        .HasColumnName("qt_acessorio");

                    b.Property<int>("QtCaixa")
                        .HasColumnType("int")
                        .HasColumnName("qt_caixa");

                    b.Property<decimal>("QtCubagemAcessorio")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("qt_cubagem_acessorio");

                    b.Property<decimal>("QtCubagemCaixa")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("qt_cubagem_caixa");

                    b.Property<decimal>("QtCubagemDisplay")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("qt_cubagem_display");

                    b.Property<decimal>("QtCubagemExpositores")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("qt_cubagem_expositores");

                    b.Property<int>("QtDisplay")
                        .HasColumnType("int")
                        .HasColumnName("qt_display");

                    b.Property<int>("QtExpositores")
                        .HasColumnType("int")
                        .HasColumnName("qt_expositores");

                    b.Property<string>("TpCarga")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("tp_carga");

                    b.Property<string>("TpCargaAglutinado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("tp_carga_aglutinado");

                    b.HasKey("IdPedido");

                    b.ToTable("pedido");
                });

            modelBuilder.Entity("SIAG.Domain.Armazenagem.Cadastro.Models.Programa", b =>
                {
                    b.Property<int>("IdPrograma")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_programa");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPrograma"));

                    b.Property<string>("CdDeposito")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cd_deposito");

                    b.Property<int>("CdDocumento")
                        .HasColumnType("int")
                        .HasColumnName("cd_documento");

                    b.Property<string>("CdEquipamento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cd_equipamento");

                    b.Property<int>("CdEstabelecimento")
                        .HasColumnType("int")
                        .HasColumnName("cd_estabelecimento");

                    b.Property<int>("CdFabrica")
                        .HasColumnType("int")
                        .HasColumnName("cd_fabrica");

                    b.Property<int>("CdPrograma")
                        .HasColumnType("int")
                        .HasColumnName("cd_programa");

                    b.Property<DateTime>("DtLiberacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_liberacao");

                    b.Property<int>("FgTipo")
                        .HasColumnType("int")
                        .HasColumnName("fg_tipo");

                    b.Property<decimal>("QtAlturaCaixa")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("qt_altura_caixa");

                    b.Property<decimal>("QtComprimentoCaixa")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("qt_comprimento_caixa");

                    b.Property<decimal>("QtLarguraCaixa")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("qt_largura_caixa");

                    b.HasKey("IdPrograma");

                    b.ToTable("programa");
                });

            modelBuilder.Entity("SIAG.Domain.Armazenagem.Cadastro.Models.RegiaoTrabalho", b =>
                {
                    b.Property<int>("IdRegiaoTrabalho")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_regiao_trabalho");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRegiaoTrabalho"));

                    b.Property<int>("IdDeposito")
                        .HasColumnType("int")
                        .HasColumnName("id_deposito");

                    b.Property<string>("NmRegiaoTrabalho")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nm_regiao_trabalho");

                    b.HasKey("IdRegiaoTrabalho");

                    b.HasIndex("IdDeposito");

                    b.ToTable("regiaotrabalho");
                });

            modelBuilder.Entity("SIAG.Domain.Armazenagem.Cadastro.Models.SetorTrabalho", b =>
                {
                    b.Property<int>("IdSetorTrabalho")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_setor_trabalho");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSetorTrabalho"));

                    b.Property<int>("IdDeposito")
                        .HasColumnType("int")
                        .HasColumnName("id_deposito");

                    b.Property<string>("NmSetorTrabalho")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nm_setor_trabalho");

                    b.HasKey("IdSetorTrabalho");

                    b.HasIndex("IdDeposito");

                    b.ToTable("setortrabalho");
                });

            modelBuilder.Entity("SIAG.Domain.Armazenagem.Cadastro.Models.TipoArea", b =>
                {
                    b.Property<int>("IdTipoArea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_tipo_area");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoArea"));

                    b.Property<string>("NmTipoArea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nm_tipo_area");

                    b.HasKey("IdTipoArea");

                    b.ToTable("tipoarea");
                });

            modelBuilder.Entity("SIAG.Domain.Armazenagem.Cadastro.Models.TipoEndereco", b =>
                {
                    b.Property<int>("IdTipoEndereco")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_tipo_endereco");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoEndereco"));

                    b.Property<string>("NmTipoEndereco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nm_tipo_endereco");

                    b.HasKey("IdTipoEndereco");

                    b.ToTable("tipoendereco");
                });

            modelBuilder.Entity("SIAG.Domain.Armazenagem.Cadastro.Models.Turno", b =>
                {
                    b.Property<int>("IdTurno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_turno");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTurno"));

                    b.Property<int>("CdTurno")
                        .HasColumnType("int")
                        .HasColumnName("cd_turno");

                    b.Property<bool>("DiaAnterior")
                        .HasColumnType("bit")
                        .HasColumnName("dia_anterior");

                    b.Property<bool>("DiaSucessor")
                        .HasColumnType("bit")
                        .HasColumnName("dia_sucessor");

                    b.Property<DateTime>("DtFim")
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_fim");

                    b.Property<DateTime>("DtInicio")
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_inicio");

                    b.HasKey("IdTurno");

                    b.ToTable("turno");
                });

            modelBuilder.Entity("SIAG.Domain.Armazenagem.Cadastro.Models.AreaArmazenagem", b =>
                {
                    b.HasOne("SIAG.Domain.Armazenagem.Cadastro.Models.AgrupadorAtivo", "Agrupador")
                        .WithMany()
                        .HasForeignKey("AgrupadorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SIAG.Domain.Armazenagem.Cadastro.Models.AgrupadorAtivo", "AgrupadorReservado")
                        .WithMany()
                        .HasForeignKey("IdAgrupadorReservado")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SIAG.Domain.Armazenagem.Cadastro.Models.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("IdEndereco")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SIAG.Domain.Armazenagem.Cadastro.Models.TipoArea", "TipoArea")
                        .WithMany()
                        .HasForeignKey("IdTipoArea")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Agrupador");

                    b.Navigation("AgrupadorReservado");

                    b.Navigation("Endereco");

                    b.Navigation("TipoArea");
                });

            modelBuilder.Entity("SIAG.Domain.Armazenagem.Cadastro.Models.Caixa", b =>
                {
                    b.HasOne("SIAG.Domain.Armazenagem.Cadastro.Models.AgrupadorAtivo", "Agrupador")
                        .WithMany()
                        .HasForeignKey("AgrupadorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Agrupador");
                });

            modelBuilder.Entity("SIAG.Domain.Armazenagem.Cadastro.Models.Endereco", b =>
                {
                    b.HasOne("SIAG.Domain.Armazenagem.Cadastro.Models.RegiaoTrabalho", "RegiaoTrabalho")
                        .WithMany()
                        .HasForeignKey("IdRegiaoTrabalho")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SIAG.Domain.Armazenagem.Cadastro.Models.SetorTrabalho", "SetorTrabalho")
                        .WithMany()
                        .HasForeignKey("IdSetorTrabalho")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SIAG.Domain.Armazenagem.Cadastro.Models.TipoEndereco", "TipoEndereco")
                        .WithMany()
                        .HasForeignKey("IdTipoEndereco")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("RegiaoTrabalho");

                    b.Navigation("SetorTrabalho");

                    b.Navigation("TipoEndereco");
                });

            modelBuilder.Entity("SIAG.Domain.Armazenagem.Cadastro.Models.Pallet", b =>
                {
                    b.HasOne("SIAG.Domain.Armazenagem.Cadastro.Models.AgrupadorAtivo", "AgrupadorAtivo")
                        .WithMany()
                        .HasForeignKey("AgrupadorAtivoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SIAG.Domain.Armazenagem.Cadastro.Models.AreaArmazenagem", "AreaArmazenagem")
                        .WithMany()
                        .HasForeignKey("IdAreaArmazenagem")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AgrupadorAtivo");

                    b.Navigation("AreaArmazenagem");
                });

            modelBuilder.Entity("SIAG.Domain.Armazenagem.Cadastro.Models.RegiaoTrabalho", b =>
                {
                    b.HasOne("SIAG.Domain.Armazenagem.Cadastro.Models.Deposito", "Deposito")
                        .WithMany()
                        .HasForeignKey("IdDeposito")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Deposito");
                });

            modelBuilder.Entity("SIAG.Domain.Armazenagem.Cadastro.Models.SetorTrabalho", b =>
                {
                    b.HasOne("SIAG.Domain.Armazenagem.Cadastro.Models.Deposito", "Deposito")
                        .WithMany()
                        .HasForeignKey("IdDeposito")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Deposito");
                });
#pragma warning restore 612, 618
        }
    }
}
